# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: aws-neo4j
# app and org for use with dashboard.serverless.com
app: aws-neo4j
org: parashar

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  # you can overwrite defaults here
  lambdaHashingVersion: "20201221"
  stage: dev
  region: ap-south-1
  stackName: ${self:service}-${self:provider.stage}
  vpc:
    securityGroupIds:
      - Ref: LambdaSecurityGroup
      # - Ref: EcSecurityGroup
    subnetIds:
      - Ref: PublicSubnet1
      # - Ref: PublicSubnet2
      # - Ref: PrivateSubnet1
      # - Ref: PrivateSubnet2

  # you can define service wide environment variables here
  environment:
    NeoIp:
      Fn::GetAtt:
        - NeoInstance
        - PrivateIp

# you can add packaging information here
# package:
#   artifact: "target/${self:service}-${self:provider.stage}.jar"

# define a format with prefix as entity & stage
functions:
  insert:
    handler: handlers/person/insert.insert
    # timeout: 10
    events:
      - httpApi:
          path: /insert
          method: get
  # create:
  #   handler: handler.create
  #   # timeout: 10
  #   events:
  #     - httpApi:
  #         path: /create
  #         method: get
  # read:
  #   handler: handler.read
  #   # timeout: 10
  #   events:
  #     - httpApi:
  #         path: /read
  #         method: get
  # update:
  #   handler: handler.update
  #   # timeout: 10
  #   events:
  #     - httpApi:
  #         path: /update
  #         method: get
  # delete:
  #   handler: handler.delete
  #   # timeout: 10
  #   events:
  #     - httpApi:
  #         path: /delete
  #         method: get

resources:
  - ${file(./infra/network.yml)}
  - ${file(./infra/compute.yml)}
  # - ${file(./infra/storage.yml)}
  # resources:
  #   Resources:

  - Outputs:
      NeoOutput:
        Description: private IP of neoDb-ec2 instance
        Value:
          Fn::GetAtt:
            - NeoInstance
            - PrivateIp
        Export:
          Name: ${self:service}-${self:provider.stage}-NeoIp
          # !GetAtt NeoInstance.PrivateIp
